{"ast":null,"code":"var _jsxFileName = \"D:\\\\goit-react-hw-01-components\\\\src\\\\components\\\\FriendList\\\\FriendList.jsx\";\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport { List } from './Friendlist.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: friends.map(_ref2 => {\n      let {\n        avatar,\n        name,\n        isOnline,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        avatar: avatar,\n        name: name,\n        isOnline: isOnline\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["D:/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx"],"names":["PropTypes","FriendListItem","List","FriendList","friends","map","avatar","name","isOnline","id","propTypes","arrayOf","shape","string","isRequired","bool","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,qBAArB;;;AAEA,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACjB,QAAC,IAAD;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY;AAAA,UAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,QAAhB;AAA0BC,QAAAA;AAA1B,OAAD;AAAA,0BACX,QAAC,cAAD;AAEE,QAAA,MAAM,EAAEH,MAFV;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,QAAQ,EAAEC;AAJZ,SACOC,EADP;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAAnB;;KAAMN,U;AAaNA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,OAAV,CACPX,SAAS,CAACY,KAAV,CAAgB;AACdN,IAAAA,MAAM,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UADX;AAEdP,IAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UAFT;AAGdN,IAAAA,QAAQ,EAAER,SAAS,CAACe,IAAV,CAAeD,UAHX;AAIdL,IAAAA,EAAE,EAAET,SAAS,CAACgB,MAAV,CAAiBF;AAJP,GAAhB,CADO,EAOPA;AARmB,CAAvB;AAWA,eAAeX,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport { List } from './Friendlist.styled';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <List>\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <FriendListItem\r\n        key={id}\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline={isOnline}\r\n      />\r\n    ))}\r\n  </List>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;"]},"metadata":{},"sourceType":"module"}